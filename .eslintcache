[{"C:\\Daten\\git\\annotator\\src\\index.js":"1","C:\\Daten\\git\\annotator\\src\\reportWebVitals.js":"2","C:\\Daten\\git\\annotator\\src\\components\\App.js":"3","C:\\Daten\\git\\annotator\\src\\components\\errorSnackbar.js":"4","C:\\Daten\\git\\annotator\\src\\components\\appHeader.js":"5","C:\\Daten\\git\\annotator\\src\\components\\loadingBar.js":"6","C:\\Daten\\git\\annotator\\src\\pages\\documentsManager.js":"7","C:\\Daten\\git\\annotator\\src\\pages\\documentEditor.js":"8","C:\\Daten\\git\\annotator\\src\\pages\\fileUpload.js":"9","C:\\Daten\\git\\annotator\\src\\components\\infoSnackbar.js":"10","C:\\Daten\\git\\annotator\\src\\pages\\documentAnnotator.js":"11","C:\\Daten\\git\\annotator\\src\\components\\help.js":"12"},{"size":573,"mtime":1610819097422,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1610819097427,"results":"15","hashOfConfig":"14"},{"size":1188,"mtime":1611089388891,"results":"16","hashOfConfig":"14"},{"size":1389,"mtime":1611089409869,"results":"17","hashOfConfig":"14"},{"size":2251,"mtime":1611068884017,"results":"18","hashOfConfig":"14"},{"size":643,"mtime":1611083357188,"results":"19","hashOfConfig":"14"},{"size":6981,"mtime":1611095897817,"results":"20","hashOfConfig":"14"},{"size":5290,"mtime":1611089835585,"results":"21","hashOfConfig":"14"},{"size":5241,"mtime":1611095445051,"results":"22","hashOfConfig":"14"},{"size":1389,"mtime":1610906402696,"results":"23","hashOfConfig":"14"},{"size":5583,"mtime":1611088784618,"results":"24","hashOfConfig":"14"},{"size":3658,"mtime":1611090667859,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"150utjq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Daten\\git\\annotator\\src\\index.js",[],["53","54"],"C:\\Daten\\git\\annotator\\src\\reportWebVitals.js",[],"C:\\Daten\\git\\annotator\\src\\components\\App.js",[],"C:\\Daten\\git\\annotator\\src\\components\\errorSnackbar.js",[],["55","56"],"C:\\Daten\\git\\annotator\\src\\components\\appHeader.js",[],"C:\\Daten\\git\\annotator\\src\\components\\loadingBar.js",[],"C:\\Daten\\git\\annotator\\src\\pages\\documentsManager.js",["57"],"C:\\Daten\\git\\annotator\\src\\pages\\documentEditor.js",[],"C:\\Daten\\git\\annotator\\src\\pages\\fileUpload.js",["58"],"import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  withStyles,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { compose } from 'recompose';\r\n\r\nimport LoadingBar from '../components/loadingBar';\r\nimport ErrorSnackbar from '../components/errorSnackbar';\r\nimport InfoSnackbar from '../components/infoSnackbar'\r\n\r\nconst styles = theme => ({\r\n  useCase: {\r\n    marginTop: theme.spacing(2),\r\n    outline: 0,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(3),\r\n    right: theme.spacing(3),\r\n    [theme.breakpoints.down('xs')]: {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\nconst languages = [\"English\", \"Czech\"]\r\n\r\nclass FileUploadComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {      \r\n        document: '',\r\n        language: \"English\",\r\n        inputFileKey: Date.now(),\r\n\r\n        loading: true,\r\n        success: null,\r\n        error: null,\r\n      };\r\n\r\n      this.onFileChange = this.onFileChange.bind(this);\r\n      this.handleLanguageChange = this.handleLanguageChange.bind(this)\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  async fetch(method, endpoint, body) {\r\n    try {\r\n      this.setState({\r\n        loading: true,\r\n      })\r\n\r\n      const response = await fetch(`/api${ endpoint }`, {\r\n        method,\r\n        headers: {\r\n          \"Accept\": \"application/json\",\r\n          \"type\": \"formData\"\r\n        },\r\n        body: body\r\n      });\r\n\r\n      this.setState({\r\n        loading: false\r\n      })\r\n\r\n      if(response.ok === false) {\r\n        console.error(response)\r\n        this.setState({\r\n          error: { message: \"Error when talking with API. Error message: \" + response.statusText}\r\n        })\r\n\r\n        return response\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState({ \r\n        error: error \r\n      });\r\n    }\r\n  }\r\n\r\n  onFileChange(evt) {\r\n      this.setState({ \r\n        document: evt.target.files[0] \r\n      })\r\n  }\r\n\r\n  handleLanguageChange(evt) {\r\n    this.setState({ language: evt.target.value })\r\n  }\r\n\r\n  async onSubmit(evt) {\r\n      evt.preventDefault()\r\n      const formData = new FormData()\r\n\r\n      // combine file input and input field\r\n      formData.append('document', this.state.document)\r\n      formData.append('language', this.state.language)\r\n\r\n      await this.fetch('post', \"/documents\", formData)\r\n\r\n      this.setState({\r\n        document: null,\r\n        inputFileKey: Date.now()    // reset the input key so that the input field is regenerated (reset)\r\n      })\r\n\r\n      if(this.state.error === null) {\r\n        this.setState({\r\n          success: \"Document uploaded successfully\"\r\n        })\r\n      }\r\n  }  \r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"h4\">Document upload</Typography>\r\n        <form encType=\"multipart/form-data\" onSubmit={ this.onSubmit }>\r\n          <label htmlFor=\"btn-upload\">\r\n            <input\r\n              id=\"btn-upload\"\r\n              key={this.state.inputFileKey}\r\n              name=\"btn-upload\"\r\n              style={{ display: 'none' }}\r\n              accept=\".txt\"\r\n              type=\"file\"\r\n              onChange={ this.onFileChange } \r\n            />\r\n\r\n            <Button\r\n              className=\"btn-choose\"\r\n              variant=\"outlined\"\r\n              component=\"span\" \r\n            >\r\n              Choose Files\r\n            </Button>\r\n        </label>\r\n\r\n        <InputLabel id=\"labelInputLanguage\">Language</InputLabel>\r\n        <Select\r\n          labelId=\"labelInputLanguage\"\r\n          id=\"inputLanguage\"\r\n          value={this.state.language}\r\n          onChange={this.handleLanguageChange}\r\n          required\r\n        >\r\n          {\r\n            languages.map((language, i) => (\r\n              <MenuItem key={i} value={language}><em>{language}</em></MenuItem>\r\n            ))\r\n          }\r\n        </Select>\r\n\r\n        <div className=\"file-name\">\r\n          {this.state.document && this.state.document.name.length > 0 && (\r\n            <Typography>{ this.state.document.name }</Typography>\r\n          )}\r\n        </div>\r\n          \r\n          <Button size=\"small\" \r\n            color=\"primary\" \r\n            disabled={ !this.state.document } \r\n            type=\"submit\"\r\n          >\r\n            <AddIcon/>Upload\r\n          </Button>\r\n        </form>\r\n\r\n        {this.state.error && (\r\n        <ErrorSnackbar\r\n          onClose={() => this.setState({ error: null })}\r\n          message={ this.state.error.message }\r\n        />\r\n        )}\r\n\r\n        {this.state.loading && (\r\n          <LoadingBar/>\r\n        )}\r\n\r\n        {this.state.success && (\r\n          <InfoSnackbar\r\n            onClose={() => this.setState({ success: null })}\r\n            message={ this.state.success }\r\n          />\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withStyles(styles),\r\n  )(FileUploadComponent);","C:\\Daten\\git\\annotator\\src\\components\\infoSnackbar.js",[],"C:\\Daten\\git\\annotator\\src\\pages\\documentAnnotator.js",[],"C:\\Daten\\git\\annotator\\src\\components\\help.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":19,"column":8,"nodeType":"67","messageId":"68","endLine":19,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":130,"column":13,"nodeType":"67","messageId":"68","endLine":130,"endColumn":20},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"no-unused-vars","'SaveAltIcon' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]